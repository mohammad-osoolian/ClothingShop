@page "/home"
@inject IJSRuntime JsRuntime
@* @inject HttpClient Client *@
@if (Alret)
{
    <div class="alert alert-danger" role="alert">Not Available</div>
}
<h1>Clothing Shop</h1>
@if (Shirts != null)
{
    @foreach (Shirt shirt in Shirts)
    {
        <div class="product">
        <img src=@(shirt.Image) height="300" width="232"/>
        <p>@shirt.Name @shirt.Size</p>
        @if (CartShirtIds.Count(id=>id==shirt.Id) == 0)
        {
            <button class="btn-purchase" style="float: left;" @onclick="()=>AddShirt(shirt.Id)"><span>@shirt.Price $</span></button>
        }
        @if (CartShirtIds.Count(id=>id==shirt.Id)==1)
        {
            <button class="btn btn-secondary" style="float: left; font-size: 20px;" @onclick="()=>RemoveShirt(shirt.Id)">
                <span class="oi oi-trash"></span></button>
                <button class="btn btn-secondary" style="float: right; font-size: 20px;" @onclick="()=>AddShirt(shirt.Id)">+</button>
                <p style="margin-left: 100px; font-size: 30px;">@CartShirtIds.Count(id=>id==shirt.Id)</p>
        }
        @if (CartShirtIds.Count(id=>id==shirt.Id) > 1)
        {
            <button class="btn btn-secondary" style="float: left; font-size: 20px;" @onclick="()=>RemoveShirt(shirt.Id)">-</button>
            <button class="btn btn-secondary" style="float: right; font-size: 20px;" @onclick="()=>AddShirt(shirt.Id)">+</button>
            <p style="margin-left: 100px; font-size: 30px;">@CartShirtIds.Count(id=>id==shirt.Id)</p>
        }
        </div>
    }
}

@if (Pants != null)
{
    @foreach (Pants pants in Pants)
    {
        <div class="product">
        <img src=@(pants.Image) height="300" width="232"/>
        <p>@pants.Name @pants.Size</p>
        @if (CartPantsIds.Count(id=>id==pants.Id) == 0)
        {
            <button class="btn-purchase" style="float: left;" @onclick="()=>AddPants(pants.Id)"><span>@pants.Price $</span></button>
        }
        @if (CartPantsIds.Count(id=>id==pants.Id)==1)
        {
            <button class="btn btn-secondary" style="float: left; font-size: 20px;" @onclick="()=>RemovePants(pants.Id)">
                <span class="oi oi-trash"></span></button>
                <button class="btn btn-secondary" style="float: right; font-size: 20px;" @onclick="()=>AddPants(pants.Id)">+</button>
                <p style="margin-left: 100px; font-size: 30px;">@CartPantsIds.Count(id=>id==pants.Id)</p>
        }
        @if (CartPantsIds.Count(id=>id==pants.Id) > 1)
        {
            <button class="btn btn-secondary" style="float: left; font-size: 20px;" @onclick="()=>RemovePants(pants.Id)">-</button>
            <button class="btn btn-secondary" style="float: right; font-size: 20px;" @onclick="()=>AddPants(pants.Id)">+</button>
            <p style="margin-left: 100px; font-size: 30px;">@CartPantsIds.Count(id=>id==pants.Id)</p>
        }
        </div>
    }
}

@code
{
    public bool Alret=false;
    List<int> CartShirtIds = new List<int>();
    List<int> CartPantsIds = new List<int>();
    public static string BaseUrl = "https://d99521073.herokuapp.com/";
    public static List<Shirt> Shirts{get;set;}
    public static List<Pants> Pants{get;set;}

    HttpClient Client = new HttpClient();
    protected override async Task OnInitializedAsync()
    {
        Shirts = await Client.GetFromJsonAsync<List<Shirt>>(BaseUrl + "Shirt/GetAllShirts");
        Pants = await Client.GetFromJsonAsync<List<Pants>>(BaseUrl + "Pants/GetAllPants");
        MyCart.CartShirtIds.Clear();
        MyCart.CartPantsIds.Clear();
    }
    public void AddShirt(int id)
    {
        if (CartShirtIds.Count(num=>num == id) >= Shirts.Find(shirt=>shirt.Id == id).Number)
        {
            Alret = true;
            this.StateHasChanged();
            JsRuntime.InvokeAsync<bool>("scrollTo",0,0);
            return;
        }
        CartShirtIds.Add(id);
        MyCart.CartShirtIds.Add(id);
    }
    public void RemoveShirt(int id)
    {
        if (CartShirtIds.Count(num=>num == id) <= Shirts.Find(shirt=>shirt.Id == id).Number)
            Alret = false;
        CartShirtIds.Remove(id);
        MyCart.CartShirtIds.Remove(id);
    }

    public void AddPants(int id)
    {
        if (CartPantsIds.Count(num=>num == id) >= Pants.Find(pants=>pants.Id == id).Number)
        {
            Alret = true;
            this.StateHasChanged();
            JsRuntime.InvokeAsync<bool>("scrollTo",0,0);
            return;
        }
        CartPantsIds.Add(id);
        MyCart.CartPantsIds.Add(id);
    }
    public void RemovePants(int id)
    {
        if (CartPantsIds.Count(num=>num == id) <= Pants.Find(pants=>pants.Id == id).Number)
            Alret = false;
        CartPantsIds.Remove(id);
        MyCart.CartPantsIds.Remove(id);
    }
}
    